OBEX client API description
***************************

Copyright (C) 2007-2008  Marcel Holtmann <marcel@holtmann.org>


Client hierarchy
================

Service		org.openobex.client
Interface	org.openobex.Client
Object path	/

Methods		void SendFiles(dict device, array{string} files, object agent)

			Send one or multiple local files to the specified
			device. The device is configured via properties. At
			least the Destination property should be specified.

		object CreateSession(dict device)

			Create a new OBEX session. The device is configured
			via properties like in SendFiles.

Properties	string Target

		string Source

		string Destination


Session hierarchy
=================

Service		org.openobex.client
Interface	org.openobex.Session
Object path	[variable prefix]/{session0,session1,...}

Methods		dict GetProperties()

			Returns all properties for the session.

		void AssignAgent(object agent)

			Assign an OBEX agent to this session. This allows
			detailed progress reports about the transactions.

		void ReleaseAgent(object agent)

			Release a previously assigned OBEX agent.


File Transfer hierarchy
=======================

Service		org.openobex.client
Interface	org.openobex.FileTransfer
Object path	[variable prefix]/{session0,session1,...}

Methods		void ChangeFolder(string folder)

			Change the current folder of the remote device.

		void CreateFolder(string folder)

			Create a new folder in the remote device.

		array{dict} ListFolder(string folder)

			Returns a dictionary containing information about
			the specified folder content.

			For listing the current folder, "" and "." can be
			used as parameter.

			The following keys are defined:

				string Name : Object name in UTF-8 format
				string Type : Either "folder" or "file"
				uint64 Size : Object size or number of items in folder
				string Permission : Group, owner and other permission
				guint64 Modified : Last change
				guint64 Accessed : Last access
				guint64 Created : Creation date

		void GetFile(string targetfile, string sourcefile)

			Copy the source file (from remote device) to the
			target file (on local filesystem).

			A new Transfer object is created to represent this
			transaction.

		void PutFile(string sourcefile, string targetfile)

			Copy the source file (from local filesystem) to the
			target file (on remote device).

			A new Transfer object is created to represent this
			transaction.

		void CopyFile(string sourcefile, string targetfile)

			Copy a file within the remote device from source file
			to target file.

		void MoveFile(string sourcefile, string targetfile)

			Movea file within the remote device from source file
			to the target file.

		void Delete(string file)

			Deletes the specified file/folder.


Transfer hierarchy
==================

Service		org.openobex.client
Interface	org.openobex.Transfer
Object path	[variable prefix]/{transfer0,transfer1,...}

Methods		dict GetProperties()

			Returns all properties for the transfer. See the
			properties section for available properties.

Properties	string Name [read-only]

			Name of the transferred object.

		uint64 Size [read-only]

			Size of the transferred object. If the size is
			unknown, then this property will not be present.


Agent hierarchy
===============

Service		unique name
Interface	org.openobex.Agent
Object path	freely definable

Methods		void Release()

			This method gets called when the service daemon
			unregisters the agent. An agent can use it to do
			cleanup tasks. There is no need to unregister the
			agent, because when this method gets called it has
			already been unregistered.

		string Request(object transfer)

			Accept or reject a new transfer (client and server)
			and provide the filename for it.

			In case of incoming transfers it is the filename
			where to store the file and for outgoing transfers
			it is the filename to show the remote device. If left
			empty it will be calculated automatically.

			Possible errors: org.openobex.Error.Rejected
			                 org.openobex.Error.Canceled

		void Progress(object transfer, uint64 transferred)

			Progress within the transfer has been made. The
			number of transferred bytes is given as second
			argument for convenience.

		void Complete(object transfer)
