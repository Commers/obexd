OBEX client API description
***************************

Copyright (C) 2007-2008  Marcel Holtmann <marcel@holtmann.org>


Client hierarchy
================

Service		org.openobex.client
Interface	org.openobex.Client
Object path	/

Methods		void SendFiles(dict device, array{string} files, object agent)

			Send one or multiple local files to the specified
			device. The device is configured via properties. At
			least the Destination property should be specified.

		object CreateSession(dict device)

			Create a new OBEX session. The device is configured
			via properties like in SendFiles.

Properties	string Target

		string Source

		string Destination


Session hierarchy
=================

Service		org.openobex.client
Interface	org.openobex.Session
Object path	[variable prefix]/{session0,session1,...}

Methods		dict GetProperties()

			Returns all properties for the session.

		void AssignAgent(object agent)

			Assign an OBEX agent to this session. This allows
			detailed progress reports about the transactions.

		void ReleaseAgent(object agent)

			Release a previously assigned OBEX agent.


Transfer hierarchy
==================

Service		org.openobex.client
Interface	org.openobex.Transfer
Object path	[variable prefix]/{transfer0,transfer1,...}

Methods		dict GetProperties()

			Returns all properties for the transfer. See the
			properties section for available properties.

Properties	string Name [read-only]

			Name of the transferred object.

		uint64 Size [read-only]

			Size of the transferred object. If the size is
			unknown, then this property will not be present.


Agent hierarchy
===============

Service		unique name
Interface	org.openobex.Agent
Object path	freely definable

Methods		void Release()

			This method gets called when the service daemon
			unregisters the agent. An agent can use it to do
			cleanup tasks. There is no need to unregister the
			agent, because when this method gets called it has
			already been unregistered.

		string Request(object transfer)

			Accept or reject a new transfer (client and server)
			and provide the filename for it.

			In case of incoming transfers it is the filename
			where to store the file and for outgoing transfers
			it is the filename to show the remote device. If left
			empty it will be calculated automatically.

			Possible errors: org.openobex.Error.Rejected
			                 org.openobex.Error.Canceled

		void Progress(object transfer, uint64 transferred)

			Progress within the transfer has been made. The
			number of transferred bytes is given as second
			argument for convenience.

		void Complete(object transfer)
